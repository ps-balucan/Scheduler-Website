{"version":3,"sources":["logo.svg","classes.csv","App.js","reportWebVitals.js","index.js"],"names":["animatedComponents","makeAnimated","App","useState","data","setData","useEffect","csv","myfile","then","console","log","map","d","name","style","width","justifyContent","display","className","color","cacheOptions","defaultOptions","loadOptions","inputValue","Promise","resolve","setTimeout","filter","i","label","toLowerCase","includes","filterOptions","isMulti","components","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAe,I,cCAA,MAA0B,oC,wBCUnCA,EAAqBC,cAmDZC,MAjDf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAE+BF,mBAAS,IAFxC,gCAG2BA,mBAAU,KAHrC,mBA+Bb,OA/Ba,UAKbG,qBAAU,WACRC,YAAIC,GAAQC,KAAKJ,GACjBK,QAAQC,IAAI,iBAGX,IACQC,YAAIR,GAAM,SAASS,GAC5B,OAAOA,EAAEC,QAEXJ,QAAQC,IAAI,eACZD,QAAQC,IAAIP,GAiBV,qBAAKW,MAAO,CAACC,MAAM,MAAOC,eAAe,SAAUC,QAAQ,QAA3D,SACE,sBAAKC,UAAU,MAAf,UACE,oBAAIJ,MAAO,CAACK,MAAM,OAAlB,iCACA,cAAC,IAAD,CACAC,cAAY,EACZC,gBAAc,EACdC,YAfiB,SAAAC,GAAU,OAC/B,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,EATgB,SAACF,GACrB,OAAOpB,EAAKwB,QAAQ,SAAAC,GAAC,OACnBA,EAAEC,MAAMC,cAAcC,SAASR,EAAWO,kBAOhCE,CAAcT,MACrB,SAYDU,SAAO,EACPC,WAAYnC,UCxCLoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e7ee3677.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/classes.37a73850.csv\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState , useEffect} from 'react';\nimport { csv, map } from 'd3'\nimport myfile from './classes.csv'\nimport {createFilter} from 'react-select';\n\nimport makeAnimated from 'react-select/animated';\nimport AsyncCreatable from 'react-select/async-creatable'\n\nconst animatedComponents = makeAnimated();\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [myInputValue, setMyInputValue] = useState( \"\" );\n\n  useEffect(() => {\n    csv(myfile).then(setData);\n    console.log(\"Loaded data\");\n    \n    \n  }, []);\n  var col2 = map(data, function(d){\n    return d.name\n  })\n  console.log(\"Going here.\");\n  console.log(data)\n\n  const filterOptions = (inputValue: string) => {\n    return data.filter( i => \n      i.label.toLowerCase().includes(inputValue.toLowerCase())\n      );\n  };\n  \n  const promiseOptions = inputValue =>\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve(filterOptions(inputValue));\n      }, 1000);\n    });\n  \n  \n  return (\n    <div style={{width:\"90%\", justifyContent:\"center\", display:\"flex\"}}>\n      <div className=\"App\">\n        <h3 style={{color:\"red\"}}>CRS Class Scheduler</h3>\n        <AsyncCreatable \n        cacheOptions \n        defaultOptions \n        loadOptions={promiseOptions} \n        isMulti \n        components={animatedComponents}\n        />\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}